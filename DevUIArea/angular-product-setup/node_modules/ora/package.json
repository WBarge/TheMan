{
  "_args": [
    [
      {
        "raw": "ora@4.0.3",
        "scope": null,
        "escapedName": "ora",
        "name": "ora",
        "rawSpec": "4.0.3",
        "spec": "4.0.3",
        "type": "version"
      },
      "E:\\DevUIArea\\angular-product-setup\\node_modules\\@angular-devkit\\schematics"
    ]
  ],
  "_from": "ora@4.0.3",
  "_hasShrinkwrap": false,
  "_id": "ora@4.0.3",
  "_location": "/ora",
  "_nodeVersion": "10.17.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ora_4.0.3_1573640593714_0.3319285039419544"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.11.3",
  "_phantomChildren": {
    "@types/color-name": "1.1.1"
  },
  "_requested": {
    "raw": "ora@4.0.3",
    "scope": null,
    "escapedName": "ora",
    "name": "ora",
    "rawSpec": "4.0.3",
    "spec": "4.0.3",
    "type": "version"
  },
  "_requiredBy": [
    "/@angular-devkit/schematics"
  ],
  "_resolved": "https://registry.npmjs.org/ora/-/ora-4.0.3.tgz",
  "_shasum": "752a1b7b4be4825546a7a3d59256fa523b6b6d05",
  "_shrinkwrap": null,
  "_spec": "ora@4.0.3",
  "_where": "E:\\DevUIArea\\angular-product-setup\\node_modules\\@angular-devkit\\schematics",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/ora/issues"
  },
  "dependencies": {
    "chalk": "^3.0.0",
    "cli-cursor": "^3.1.0",
    "cli-spinners": "^2.2.0",
    "is-interactive": "^1.0.0",
    "log-symbols": "^3.0.0",
    "mute-stream": "0.0.8",
    "strip-ansi": "^6.0.0",
    "wcwidth": "^1.0.1"
  },
  "description": "Elegant terminal spinner",
  "devDependencies": {
    "@types/node": "^12.7.5",
    "ava": "^2.4.0",
    "get-stream": "^5.1.0",
    "tsd": "^0.10.0",
    "xo": "^0.25.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-fnDebVFyz309A73cqCipVL1fBZewq4vwgSHfxh43vVy31mbyoQ8sCH3Oeaog/owYOs/lLlGVPCISQonTneg6Pg==",
    "shasum": "752a1b7b4be4825546a7a3d59256fa523b6b6d05",
    "tarball": "https://registry.npmjs.org/ora/-/ora-4.0.3.tgz",
    "fileCount": 5,
    "unpackedSize": 21564,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdy9mSCRA9TVsSAnZWagAAcOYQAIKUwG++xVfuRT78uylw\noERRVw1oeQ0Ia/z4KtPGr8tdVJlGk46IByUtXujHgt+iBugzJaQTYUx0ocz2\nqmzGEU/QuscHGz+/Rpq0Cx/p706QeNVEooZ97L9759z/2KSvRlON+YVyP6Tz\nq6L/Ly83EZ4nYGPphnAjRGxIwEBMEY+6TdO3LbUrbtalV15FHBa0z6dIVR6Q\neJ4+Ta+AKzdkzQoBPjVLyoC9pAZnBaREWu5xwbjSBujLFtq0cXkGmu8npz5i\n9ZciiW0yQaj9aXGA6vCHr/HhRGcQo9jS1e0r7gGaH/3O2RNTGkHJIYKktf4a\nMWK1TnX5maH3kdSdel8i+5rQxlChT3YM5yIL2DNqv7iU3UDgDsj8aRtPYgbf\nghHkMdZTRxlR7H7xahaHTuclfTb3bxjuI3yTgJlcMUfBibvG2YGcgDa/SjV1\n3ihQmk+7Lxis/cxCxDO6DDhSmjrhHegGvX4wViIX6VP5Gz7UR1ChlAFVs2SJ\nbHhGN0QGeobmW3nm4niQywddDOQF/1SQgtvWzhH1irvBPbyMqXMgIfnAdQhJ\nopfasNVEcNNVCikEdZi/UKIZ4aNAMXHT+fXFKchYAuYOYfq+ozF8oWcY9dRb\nlEYMLri+jlHBbrpftL0evhn2tIb5wcIfXNP+cNVH3aMrVlusMfgBQmkRAtPx\nrgoS\r\n=ozLu\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "1ad2eaca14e95d318a1a1eab504edd55232790a1",
  "homepage": "https://github.com/sindresorhus/ora#readme",
  "keywords": [
    "cli",
    "spinner",
    "spinners",
    "terminal",
    "term",
    "console",
    "ascii",
    "unicode",
    "loading",
    "indicator",
    "progress",
    "busy",
    "wait",
    "idle"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "ora",
  "optionalDependencies": {},
  "readme": "# ora [![Build Status](https://travis-ci.org/sindresorhus/ora.svg?branch=master)](https://travis-ci.org/sindresorhus/ora)\n\n> Elegant terminal spinner\n\n<p align=\"center\">\n\t<br>\n\t<img src=\"screenshot.svg\" width=\"500\">\n\t<br>\n</p>\n\n\n## Install\n\n```\n$ npm install ora\n```\n\n\n## Usage\n\n```js\nconst ora = require('ora');\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n\n\n## API\n\n### ora(text)\n### ora(options)\n\nIf a string is provided, it is treated as a shortcut for [`options.text`](#text).\n\n#### options\n\nType: `object`\n\n##### text\n\nType: `string`\n\nText to display after the spinner.\n\n##### prefixText\n\nType: `string`\n\nText to display before the spinner. No prefix text will be displayed if set to an empty string.\n\n##### spinner\n\nType: `string | object`\\\nDefault: `'dots'` <img src=\"screenshot-spinner.gif\" width=\"14\">\n\nName of one of the [provided spinners](https://github.com/sindresorhus/cli-spinners/blob/master/spinners.json). See `example.js` in this repo if you want to test out different spinners. On Windows, it will always use the `line` spinner as the Windows command-line doesn't have proper Unicode support.\n\nOr an object like:\n\n```js\n{\n\tinterval: 80, // Optional\n\tframes: ['-', '+', '-']\n}\n```\n\n##### color\n\nType: `string`\\\nDefault: `'cyan'`\\\nValues: `'black'` `'red'` `'green'` `'yellow'` `'blue'` `'magenta'` `'cyan'` `'white'` `'gray'`\n\nColor of the spinner.\n\n##### hideCursor\n\nType: `boolean`\\\nDefault: `true`\n\nSet to `false` to stop Ora from hiding the cursor.\n\n##### indent\n\nType: `number`\\\nDefault: `0`\n\nIndent the spinner with the given number of spaces.\n\n##### interval\n\nType: `number`\\\nDefault: Provided by the spinner or `100`\n\nInterval between each frame.\n\nSpinners provide their own recommended interval, so you don't really need to specify this.\n\n##### stream\n\nType: `stream.Writable`\\\nDefault: `process.stderr`\n\nStream to write the output.\n\nYou could for example set this to `process.stdout` instead.\n\n##### isEnabled\n\nType: `boolean`\n\nForce enable/disable the spinner. If not specified, the spinner will be enabled if the `stream` is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.\n\nNote that `{isEnabled: false}` doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.\n\n##### discardStdin\n\nType: `boolean`\\\nDefault: `true`\n\nDiscard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on <kbd>Enter</kbd> key presses, and prevents buffering of input while the spinner is running.\n\nThis has no effect on Windows as there's no good way to implement discarding stdin properly there.\n\n### Instance\n\n#### .start(text?)\n\nStart the spinner. Returns the instance. Set the current text if `text` is provided.\n\n#### .stop()\n\nStop and clear the spinner. Returns the instance.\n\n#### .succeed(text?)\n\nStop the spinner, change it to a green `✔` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .fail(text?)\n\nStop the spinner, change it to a red `✖` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .warn(text?)\n\nStop the spinner, change it to a yellow `⚠` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .info(text?)\n\nStop the spinner, change it to a blue `ℹ` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .isSpinning\n\nA boolean of whether the instance is currently spinning.\n\n#### .stopAndPersist(options?)\n\nStop the spinner and change the symbol or text. Returns the instance. See the GIF below.\n\n##### options\n\nType: `object`\n\n###### symbol\n\nType: `string`\\\nDefault: `' '`\n\nSymbol to replace the spinner with.\n\n###### text\n\nType: `string`\\\nDefault: Current `'text'`\n\nText to be persisted after the symbol\n\n###### prefixText\n\nType: `string`\\\nDefault: Current `prefixText`\n\nText to be persisted before the symbol. No prefix text will be displayed if set to an empty string.\n\n<img src=\"screenshot-2.gif\" width=\"480\">\n\n#### .clear()\n\nClear the spinner. Returns the instance.\n\n#### .render()\n\nManually render a new frame. Returns the instance.\n\n#### .frame()\n\nGet a new frame.\n\n#### .text\n\nChange the text after the spinner.\n\n#### .prefixText\n\nChange the text before the spinner. No prefix text will be displayed if set to an empty string.\n\n#### .color\n\nChange the spinner color.\n\n#### .spinner\n\nChange the spinner.\n\n#### .indent\n\nChange the spinner indent.\n\n### ora.promise(action, text)\n### ora.promise(action, options)\n\nStarts a spinner for a promise. The spinner is stopped with `.succeed()` if the promise fulfills or with `.fail()` if it rejects. Returns the spinner instance.\n\n#### action\n\nType: `Promise`\n\n\n## FAQ\n\n### How do I change the color of the text?\n\nUse [Chalk](https://github.com/chalk/chalk):\n\n```js\nconst ora = require('ora');\nconst chalk = require('chalk');\n\nconst spinner = ora(`Loading ${chalk.red('unicorns')}`).start();\n```\n\n### Why does the spinner freeze?\n\nJavaScript is single-threaded, so synchronous operations blocks the thread, including the spinner animation. Prefer asynchronous operations whenever possible.\n\n\n## Related\n\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n- [listr](https://github.com/SamVerschueren/listr) - Terminal task list\n- [CLISpinner](https://github.com/kiliankoe/CLISpinner) - Terminal spinner library for Swift\n- [halo](https://github.com/ManrajGrover/halo) - Python port\n- [spinners](https://github.com/FGRibreau/spinners) - Terminal spinners for Rust\n- [marquee-ora](https://github.com/joeycozza/marquee-ora) - Scrolling marquee spinner for Ora\n- [briandowns/spinner](https://github.com/briandowns/spinner) - Terminal spinner/progress indicator for Go\n- [tj/go-spin](https://github.com/tj/go-spin) - Terminal spinner package for Go\n- [observablehq.com/@victordidenko/ora](https://observablehq.com/@victordidenko/ora) - Ora port to Observable notebooks\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/ora.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "4.0.3"
}
