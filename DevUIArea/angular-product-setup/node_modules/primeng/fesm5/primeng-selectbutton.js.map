{"version":3,"file":"primeng-selectbutton.js","sources":["ng:/primeng/selectbutton/selectbutton.ts","ng:/primeng/selectbutton/primeng-selectbutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ContentChild,TemplateRef,SimpleChanges,OnChanges,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectItem} from 'primeng/api';\nimport {ObjectUtils} from 'primeng/utils';\nimport {RippleModule} from 'primeng/ripple';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SELECTBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-selectButton',\n    template: `\n        <div [ngClass]=\"'p-selectbutton p-buttonset p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"group\">\n            <div *ngFor=\"let option of options; let i = index\" #btn class=\"p-button p-component\" [class]=\"option.styleClass\" role=\"button\" [attr.aria-pressed]=\"isSelected(option)\"\n                [ngClass]=\"{'p-highlight':isSelected(option), 'p-disabled': disabled || option.disabled, \n                'p-button-icon-only': (option.icon && !option.label)}\" (click)=\"onItemClick($event,option,i)\" (keydown.enter)=\"onItemClick($event,option,i)\"\n                [attr.title]=\"option.title\" [attr.aria-label]=\"option.label\" (blur)=\"onBlur($event)\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" pRipple>\n                <ng-container *ngIf=\"!itemTemplate else customcontent\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"option.icon\" *ngIf=\"option.icon\"></span>\n                    <span class=\"p-button-label\">{{option.label}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    `,\n    providers: [SELECTBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./selectbutton.css', '../button/button.css']\n})\nexport class SelectButton implements ControlValueAccessor, OnChanges {\n\n    @Input() tabindex: number = 0;\n\n    @Input() multiple: boolean;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() dataKey: string\n    \n    @Input() optionLabel: string;\n    \n    @Output() onOptionClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @ContentChild(TemplateRef) itemTemplate;\n    \n    value: any;\n        \n    _options: any[];\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    constructor(private cd: ChangeDetectorRef) {}\n    \n    @Input() get options(): any[] {\n        return this._options;\n    }\n\n    set options(val: any[]) {\n        //NoOp\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.options) {\n            this._options = this.optionLabel ? ObjectUtils.generateSelectItems(simpleChange.options.currentValue, this.optionLabel) : simpleChange.options.currentValue;\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onItemClick(event, option: SelectItem, index: number) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n                \n        if (this.multiple) {\n            let itemIndex = this.findItemIndex(option);\n            if (itemIndex != -1)\n                this.value = this.value.filter((val,i) => i!=itemIndex);\n            else\n                this.value = [...this.value||[], option.value];\n        }\n        else {\n            this.value = option.value;\n        }\n        \n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        \n        this.onModelChange(this.value);\n        \n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    \n    onBlur(event) {\n        this.onModelTouched();\n    }\n    \n    isSelected(option: SelectItem) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return ObjectUtils.equals(option.value, this.value, this.dataKey);\n    }\n    \n    findItemIndex(option: SelectItem) {\n        let index = -1;\n        if (this.value) {\n            for(let i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [SelectButton],\n    declarations: [SelectButton]\n})\nexport class SelectButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}