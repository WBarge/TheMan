{"version":3,"file":"primeng-checkbox.js","sources":["ng:/primeng/checkbox/checkbox.ts","ng:/primeng/checkbox/primeng-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ViewChild,ElementRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'p-checkbox p-component': true, 'p-checkbox-checked': checked, 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused}\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.required]=\"required\">\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'p-highlight': checked, 'p-disabled': disabled, 'p-focus': focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'p-checkbox-label': true, 'p-checkbox-label-active':checked, 'p-disabled':disabled, 'p-checkbox-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./checkbox.css']\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: boolean;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @ViewChild('cb') inputViewChild: ElementRef;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if (this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel(event);\n        \n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel(event) {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit({checked:this.checked, originalEvent: event});\n    }\n    \n    handleChange(event)Â {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel(event);\n        }\n    }\n\n    isChecked(): boolean {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if (this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus() {\n        this.focused = true;\n    }\n\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n     \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}