{"version":3,"file":"primeng-inputtextarea.js","sources":["ng:/primeng/inputtextarea/inputtextarea.ts","ng:/primeng/inputtextarea/primeng-inputtextarea.ts"],"names":[],"mappings":";;;;;;;IA6BI,uBAAmB,EAAc,EAAqB,OAAgB,EAAqB,OAAmB;AAAI,QAA/F,OAAE,GAAF,EAAE,CAAY;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAY;AAAC,QAVrG,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC/D,KASsH;AACtH,IACI,gCAAQ,GAAR;AACH,QADG,iBAYC;AACL,QAZQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC;AACpE,gBAAS,KAAI,CAAC,WAAW,EAAE,CAAC;AACnC,aAAa,CAAC,CAAA;AACd,SAAS;AACT,QACQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC;AACvE,gBAAU,KAAI,CAAC,WAAW,EAAE,CAAC;AACnC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK;AAEL,IACI,+BAAO,GADP,UACQ,CAAC;AACb,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,KAAK;AACJ,IACG,yCAAiB,GAAjB;AAAc,QACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,MAAM,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClI,KAAK;AACJ,IAEG,+BAAO,GADP,UACQ,CAAC;AACb,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAS;AACT,KAAK;AACJ,IAEG,8BAAM,GADN,UACO,CAAC;AACZ,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAS;AACT,KAAK;AACJ,IACG,8BAAM,GAAN,UAAO,KAAa;AACxB,QAAQ,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACpD,QAAQ,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;AACvF,QACQ,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AACjH,YAAY,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC7D,YAAY,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC;AACvF,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5D,SAAS;AACT,QACQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAE,EAAE,CAAC,CAAC;AACtC,KAAK;AAEL,IAAI,mCAAW,GAAX;AAAc,QACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,QACQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;AAC1B,SAAS;AACT,KAAK;AAEL,IAAI,mCAAW,GAAX;AAAc,QACV,IAAI,IAAI,CAAC,mBAAmB,EAAE;AACtC,YAAY,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;AACnD,SAAS;AACT,QACQ,IAAI,IAAI,CAAC,qBAAqB,EAAE;AACxC,YAAY,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;AACrD,SAAS;AACT,KAAK;AACJ;AAIc,gBA3EY,UAAU;AAAI,gBAA0B,OAAO,uBAAlC,QAAQ;AAAO,gBAAkD,SAAS,uBAArC,QAAQ;AAAM,SAdlF;iDAVR,jDAUS;AAVA,SAAC,TAYP,gBAjBuB,UAAU;CAMjC,QAAQ,EAAE,kBAAkB,sBAC5B,IAAI,EAAE,zDAP+B,gBACjC,OAAO,uBA4ByB,QAAQ;sBArBxC,yBAAyB,EAAE,MAAM,vDAqBc,gBA5BtC,SAAS,uBA4BmD,QAAQ;AAAM;SApBnF,qBAAqB,EAAE,hCAoBsE;CApBhE,0BAC7B,3BAqBE,6BAdL,KAAK;SAPmB,EAAE,MAAM,jBAOtB,2BAEV,MAAM;KARH,kBAAkB,EAAE,QAAQ,0BAC5B,3DAOQ,0BA0BX,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;qBAjCM,EAAE,YAAY,sBACpD,zDAiCA,0BAQA,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;EAxCpC,FAyCI,yBAMA,YAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;AAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IAsCX,oBAAC;AAED,CAjGA,IA+FC;AACD;AAGa,IAFb;AACqB,KAIe;uDALnC,QAAQ,SAAC;WACN,OAAO,EAAE,CAAC,YAAY,CAAC,sBACvB,OAAO,EAAE,CAAC,aAAa,CAAC,sBACxB,YAAY,EAAE,CAAC,aAAa,CAAC,kBAChC;;;;;;;;;gDACQ;AAAC,IAAyB,0BAAC;AACnC,CAND;AAAK;ACtGL;AACA;AACA,GAAG;AACH;AACA;AACiB","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional, AfterViewInit, AfterContentInit, OnInit, OnDestroy} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements OnInit, OnDestroy  {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}