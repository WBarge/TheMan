{"version":3,"file":"primeng-paginator.js","sources":["ng:/primeng/paginator/paginator.ts","ng:/primeng/paginator/primeng-paginator.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,OnInit,Input,Output,ChangeDetectorRef,EventEmitter,TemplateRef,OnChanges,SimpleChanges,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {SelectItem} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {SharedModule} from 'primeng/api';\n\n@Component({\n    selector: 'p-paginator',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-paginator p-component'\" *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\n            <div class=\"p-paginator-left-content\" *ngIf=\"templateLeft\">\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n            <span class=\"p-paginator-current\" *ngIf=\"showCurrentPageReport\">{{currentPageReport}}</span>\n            <button type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToFirst($event)\" pRipple\n                    class=\"p-paginator-first p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-left\"></span>\n            </button>\n            <button type=\"button\" [disabled]=\"isFirstPage()\" (click)=\"changePageToPrev($event)\" pRipple\n                    class=\"p-paginator-prev p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isFirstPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-left\"></span>\n            </button>\n            <span class=\"p-paginator-pages\">\n                <button type=\"button\" *ngFor=\"let pageLink of pageLinks\" class=\"p-paginator-page p-paginator-element p-link\" [ngClass]=\"{'p-highlight': (pageLink-1 == getPage())}\"\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" pRipple>{{pageLink}}</button>\n            </span>\n            <button type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToNext($event)\" pRipple\n                    class=\"p-paginator-next p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-right\"></span>\n            </button>\n            <button type=\"button\" [disabled]=\"isLastPage()\" (click)=\"changePageToLast($event)\" pRipple\n                    class=\"p-paginator-last p-paginator-element p-link\" [ngClass]=\"{'p-disabled':isLastPage()}\">\n                <span class=\"p-paginator-icon pi pi-angle-double-right\"></span>\n            </button>\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\"\n                (onChange)=\"onRppChange($event)\" [appendTo]=\"dropdownAppendTo\" [scrollHeight]=\"dropdownScrollHeight\"></p-dropdown>\n            <div class=\"p-paginator-right-content\" *ngIf=\"templateRight\">\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./paginator.css']\n})\nexport class Paginator implements OnInit, OnChanges {\n\n    @Input() pageLinkSize: number = 5;\n\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() alwaysShow: boolean = true;\n    \n    @Input() templateLeft: TemplateRef<any>;\n    \n    @Input() templateRight: TemplateRef<any>;\n\n    @Input() dropdownAppendTo: any;\n\n    @Input() dropdownScrollHeight: string = '200px';\n\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\n\n    @Input() showCurrentPageReport: boolean;\n\n    @Input() totalRecords: number = 0;\n\n    @Input() rows: number = 0;\n    \n    @Input() rowsPerPageOptions: any[];\n\n    pageLinks: number[];\n\n    rowsPerPageItems: SelectItem[];\n    \n    paginatorState: any;\n\n    _first: number = 0;\n\n    constructor(private cd: ChangeDetectorRef) {}\n    \n    ngOnInit() {\n        this.updatePaginatorState();\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.totalRecords) {\n            this.updatePageLinks();\n            this.updatePaginatorState();\n            this.updateFirst();\n            this.updateRowsPerPageOptions();\n        }\n\n        if (simpleChange.first) {\n            this._first = simpleChange.first.currentValue;\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        }\n\n        if (simpleChange.rows) {\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        }\n\n        if (simpleChange.rowsPerPageOptions) {\n            this.updateRowsPerPageOptions();\n        }\n    }\n\n    @Input() get first(): number {\n        return this._first;\n    }\n    set first(val:number) {\n        this._first = val;\n    }\n\n    updateRowsPerPageOptions() {\n        if (this.rowsPerPageOptions) {\n            this.rowsPerPageItems = [];\n            for (let opt of this.rowsPerPageOptions) {\n                if (typeof opt == 'object' && opt['showAll']) {\n                    this.rowsPerPageItems.unshift({label: opt['showAll'], value: this.totalRecords});\n                }\n                else {\n                    this.rowsPerPageItems.push({label: String(opt), value: opt});\n                }\n            }\n        }\n    }\n\n    isFirstPage() {\n        return this.getPage() === 0;\n    }\n\n    isLastPage() {\n        return this.getPage() === this.getPageCount() - 1;\n    }\n\n    getPageCount() {\n        return Math.ceil(this.totalRecords/this.rows)||1;\n    }\n\n    calculatePageLinkBoundaries() {\n        let numberOfPages = this.getPageCount(),\n        visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n\n        //calculate range, keep current in middle if necessary\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))),\n        end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n\n        //check when approaching to last page\n        var delta = this.pageLinkSize - (end - start + 1);\n        start = Math.max(0, start - delta);\n\n        return [start, end];\n    }\n\n    updatePageLinks() {\n        this.pageLinks = [];\n        let boundaries = this.calculatePageLinkBoundaries(),\n        start = boundaries[0],\n        end = boundaries[1];\n\n        for(let i = start; i <= end; i++) {\n            this.pageLinks.push(i + 1);\n        }\n    }\n\n    changePage(p :number) {\n        var pc = this.getPageCount();\n\n        if (p >= 0 && p < pc) {\n            this._first = this.rows * p;\n            var state = {\n                page: p,\n                first: this.first,\n                rows: this.rows,\n                pageCount: pc\n            };\n            this.updatePageLinks();\n\n            this.onPageChange.emit(state);\n            this.updatePaginatorState();\n        }\n    }\n\n    updateFirst() {\n        const page = this.getPage();\n        if (page > 0 && this.totalRecords && (this.first >= this.totalRecords)) {\n            Promise.resolve(null).then(() => this.changePage(page - 1));\n        }\n    }\n\n    getPage(): number {\n        return Math.floor(this.first / this.rows);\n    }\n\n    changePageToFirst(event) {\n      if (!this.isFirstPage()){\n          this.changePage(0);\n      }\n\n      event.preventDefault();\n    }\n\n    changePageToPrev(event) {\n        this.changePage(this.getPage() - 1);\n        event.preventDefault();\n    }\n\n    changePageToNext(event) {\n        this.changePage(this.getPage()  + 1);\n        event.preventDefault();\n    }\n\n    changePageToLast(event) {\n      if (!this.isLastPage()){\n          this.changePage(this.getPageCount() - 1);\n      }\n\n      event.preventDefault();\n    }\n\n    onPageLinkClick(event, page) {\n        this.changePage(page);\n        event.preventDefault();\n    }\n\n    onRppChange(event) {\n        this.changePage(this.getPage());\n    }\n    \n    updatePaginatorState() {\n        this.paginatorState = {\n            page: this.getPage(),\n            pageCount: this.getPageCount(),\n            rows: this.rows,\n            first: this.first,\n            totalRecords: this.totalRecords\n        }\n    }\n\n    get currentPageReport() {\n        return this.currentPageReportTemplate\n                .replace(\"{currentPage}\", String(this.getPage() + 1))\n                .replace(\"{totalPages}\", String(this.getPageCount()))\n                .replace(\"{first}\", String(this._first + 1))\n                .replace(\"{last}\", String(Math.min(this._first + this.rows, this.totalRecords)))\n                .replace(\"{rows}\", String(this.rows))\n                .replace(\"{totalRecords}\", String(this.totalRecords));\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,DropdownModule,FormsModule,SharedModule,RippleModule],\n    exports: [Paginator,DropdownModule,FormsModule,SharedModule],\n    declarations: [Paginator]\n})\nexport class PaginatorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}