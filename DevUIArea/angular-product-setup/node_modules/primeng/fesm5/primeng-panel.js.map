{"version":3,"file":"primeng-panel.js","sources":["ng:/primeng/panel/panel.ts","ng:/primeng/panel/primeng-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAI,GAAG,GAAW,CAAC,CAAC;AAEpB;AAEG,IA6FC,eAAoB,EAAc;AAAI,QAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,QAtC1B,cAAS,GAAY,KAAK,CAAC;AACxC,QAKa,eAAU,GAAW,YAAY,CAAC;AAC/C,QACa,iBAAY,GAAW,aAAa,CAAC;AAClD,QACa,eAAU,GAAY,IAAI,CAAC;AACxC,QACa,YAAO,GAAW,MAAM,CAAC;AACtC,QACc,oBAAe,GAAsB,IAAI,YAAY,EAAE,CAAC;AACtE,QACc,mBAAc,GAAsB,IAAI,YAAY,EAAE,CAAC;AACrE,QACc,kBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;AACpE,QACa,sBAAiB,GAAW,sCAAsC,CAAC;AAChF,QAeI,OAAE,GAAW,aAAW,GAAG,EAAI,CAAC;AACpC,KAC2C;AAC3C,IACI,kCAAkB,GAAlB;AAAc,QAAd,iBAwBC;AACL,QAxBQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI;AAAI,YAC5B,QAAO,IAAI,CAAC,OAAO,EAAE;AACjC,gBAAgB,KAAK,QAAQ;AAC7B,oBAAoB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;AACxD,oBAAgB,MAAM;AACtB,gBACgB,KAAK,SAAS;AAC9B,oBAAoB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzD,oBAAgB,MAAM;AACtB,gBACgB,KAAK,QAAQ;AAC7B,oBAAoB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;AACxD,oBAAgB,MAAM;AACtB,gBACgB,KAAK,OAAO;AAC5B,oBAAoB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;AACtD,oBAAgB,MAAM;AACtB,gBACgB;AAChB,oBAAoB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzD,oBAAgB,MAAM;AACtB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AAEL,IAAI,6BAAa,GAAb,UAAc,KAAY;AAC9B,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;AACvC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT,KAAK;AAEL,IAAI,2BAAW,GAAX,UAAY,KAAY;AAC5B,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;AACrC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT,KAAK;AACJ,IACG,sBAAM,GAAN,UAAO,KAAY;AACvB,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QACQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;AACpF,QACQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,IAAI,IAAI,CAAC,SAAS;AAC9B,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACnC;AACA,gBAAgB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACrC,SAAS;AACT,QACQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,KAAK;AACJ,IACG,sBAAM,GAAN,UAAO,KAAK;AAChB,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClD,KAAK;AACJ,IACG,wBAAQ,GAAR,UAAS,KAAK;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClD,KAAK;AACJ,IACG,mCAAmB,GAAnB;AAAc,QACV,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjD,KAAK;AACJ,IACG,4BAAY,GAAZ,UAAa,KAAY;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;AACnF,KAAK;AAEL;AAGmC,gBAhFP,UAAU;AAAG,SA5ChC;yCAnDR,zCAmDS;AAnDA,SAAC,TAmDiD,gBA5DP,UAAU;EAU3D,FAV8D;AAUtD,EAAE,SAAS,XAVqD;IAWxE,QAAQ,EAAE,dAX2F,6BA8DpG,KAAK;AAAK,yBAEV,KAAK;AAAK,4BAEV,KAAK;AAAK,wBAEV,KAAK;AAAK,6BAEV,KAAK;AAAK,6BAEV,KAAK;AAAK,+BAEV,KAAK;AAAK,6BAEV,KAAK;AAAK,0BAEV,KAAK;AAAK,kCAEV,MAAM;AAAK,iCAEX,MAAM;AAAK,gCAEX,MAAM;AAAK,oCAEX,KAAK;AAAK,8BAEV,YAAY,SAAC,MAAM;AAAO,4BAE1B,eAAe,SAAC,aAAa;AAAM;;;;;;;;;s8BApDnC,sBACD,UAAU,EAAE,0BACR,OAAO,CAAC,cAAc,EAAE,8BACpB,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,kCAClB;KAAM,EAAE,GAAG;OACX,QAAQ,EAAE,QAAQ;WACrB,CAAC,CAAC,8BACH,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;6BAChB,MAAM,EAAE;KAAY,8BACvB,CAAC,EAAE,EAAC,MAAM,EAAE,EAAC,MAAM,EAAE,GAAG,EAAC,EAAC,CAAC,8BAC5B,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,kCACnB,MAAM,EAAE;EAAG,8BACd,CAAC,CAAC;oBACH,UAAU,CAAC;mBAAoB,EAAE,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,EAAE,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAAC,8BACjG;SAAU,CAAC,gBAAgB,EAAE,OAAO,CAAC,sBAAsB,CAAC,CAAC;sBAC7D;CAAU,CAAC,iBAAiB,EAAE,OAAO,CAAC;;AAAsB,CAAC,CAAC,0BACjE,CAAC;QACL,sBACF,eAAe,EAAE,uBAAuB,CAAC,MAAM,sBAC9C;GAAa,EAAE,iBAAiB,CAAC,IAAI;;;;;mCAExC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA+B6C;AAAC,IA2F/C,YAAC;AAED,CA9KA,IA4KC;AACD;AAEkC,IADlC;AACa,KAIe;+CAL3B,QAAQ,SAAC;mBACN,OAAO,EAAE,CAAC,YAAY,EAAC,YAAY,EAAC,YAAY,CAAC,sBACjD,OAAO,EAAE,CAAC,KAAK,EAAC,YAAY,CAAC,sBAC7B,YAAY,EAAE,CAAC,KAAK,CAAC;KACxB;;;;;;;;;;gDACQ;AAAC,IAAiB,kBAAC;AAC3B,CAND;AAAK;ACvLL;AACA;AACA,GAAG;AACH;AACA;AACC","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, TemplateRef, AfterContentInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer, PrimeTemplate} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"{'p-panel p-component': true, 'p-panel-toggleable': toggleable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button *ngIf=\"toggleable\" type=\"button\" [attr.id]=\"id + '-label'\" class=\"p-panel-header-icon p-panel-toggler p-link\" pRipple\n                        (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                        <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                    </button>\n                </div>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"p-toggleable-content\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n                \n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                overflow: 'hidden'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', [style({ overflow: 'hidden'}), animate('{{transitionParams}}')]),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./panel.css']\n})\nexport class Panel implements AfterContentInit,BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    public iconTemplate: TemplateRef<any>;\n    \n    animating: boolean;\n\n    headerTemplate: TemplateRef<any>;\n\n    contentTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n    \n    id: string = `p-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'icons':\n                    this.iconTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,SharedModule,RippleModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}