{"version":3,"file":"primeng-togglebutton.js","sources":["ng:/primeng/togglebutton/togglebutton.ts","ng:/primeng/togglebutton/primeng-togglebutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectionStrategy,ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RippleModule} from 'primeng/ripple';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-toggleButton',\n    template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `,\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['../button/button.css']\n})\nexport class ToggleButton implements ControlValueAccessor {\n\n    @Input() onLabel: string;\n\n    @Input() offLabel: string;\n\n    @Input() onIcon: string;\n\n    @Input() offIcon: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inputId: string;\n\n    @Input() tabindex: number;\n\n    @Input() iconPos: string = 'left';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n           \n    checked: boolean = false;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    constructor(private cd: ChangeDetectorRef) { }\n    \n    toggle(event: Event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n\n            this.cd.markForCheck();\n        }\n    }\n    \n    onBlur() {\n        this.onModelTouched();\n    }\n    \n    writeValue(value: any) : void {\n        this.checked = value;\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    get hasOnLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    \n    get hasOffLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [ToggleButton],\n    declarations: [ToggleButton]\n})\nexport class ToggleButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}