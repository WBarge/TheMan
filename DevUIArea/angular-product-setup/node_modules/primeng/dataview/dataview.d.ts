import { ElementRef, OnInit, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/paginator';
export declare class DataView implements OnInit, AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    cd: ChangeDetectorRef;
    layout: string;
    paginator: boolean;
    rows: number;
    totalRecords: number;
    pageLinks: number;
    rowsPerPageOptions: any[];
    paginatorPosition: string;
    alwaysShowPaginator: boolean;
    paginatorDropdownAppendTo: any;
    paginatorDropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    lazy: boolean;
    emptyMessage: string;
    onLazyLoad: EventEmitter<any>;
    style: any;
    styleClass: string;
    trackBy: Function;
    filterBy: string;
    filterLocale: string;
    loading: boolean;
    loadingIcon: string;
    first: number;
    sortField: string;
    sortOrder: number;
    value: any[];
    onPage: EventEmitter<any>;
    onSort: EventEmitter<any>;
    onChangeLayout: EventEmitter<any>;
    header: any;
    footer: any;
    templates: QueryList<any>;
    _value: any[];
    listItemTemplate: TemplateRef<any>;
    gridItemTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    paginatorLeftTemplate: TemplateRef<any>;
    paginatorRightTemplate: TemplateRef<any>;
    filteredValue: any[];
    filterValue: string;
    initialized: boolean;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterContentInit(): void;
    updateItemTemplate(): void;
    changeLayout(layout: string): void;
    updateTotalRecords(): void;
    paginate(event: any): void;
    sort(): void;
    isEmpty(): boolean;
    createLazyLoadMetadata(): any;
    getBlockableElement(): HTMLElement;
    filter(filter: string, filterMatchMode?: string): void;
    hasFilter(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataView, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataView, "p-dataView", never, { "layout": "layout"; "pageLinks": "pageLinks"; "paginatorPosition": "paginatorPosition"; "alwaysShowPaginator": "alwaysShowPaginator"; "paginatorDropdownScrollHeight": "paginatorDropdownScrollHeight"; "currentPageReportTemplate": "currentPageReportTemplate"; "emptyMessage": "emptyMessage"; "trackBy": "trackBy"; "loadingIcon": "loadingIcon"; "first": "first"; "totalRecords": "totalRecords"; "rows": "rows"; "paginator": "paginator"; "rowsPerPageOptions": "rowsPerPageOptions"; "paginatorDropdownAppendTo": "paginatorDropdownAppendTo"; "showCurrentPageReport": "showCurrentPageReport"; "lazy": "lazy"; "style": "style"; "styleClass": "styleClass"; "filterBy": "filterBy"; "filterLocale": "filterLocale"; "loading": "loading"; "sortField": "sortField"; "sortOrder": "sortOrder"; "value": "value"; }, { "onLazyLoad": "onLazyLoad"; "onPage": "onPage"; "onSort": "onSort"; "onChangeLayout": "onChangeLayout"; }, ["header", "footer", "templates"], ["p-header", "p-footer"]>;
}
export declare class DataViewLayoutOptions {
    dv: DataView;
    style: any;
    styleClass: string;
    constructor(dv: DataView);
    changeLayout(event: Event, layout: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataViewLayoutOptions, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataViewLayoutOptions, "p-dataViewLayoutOptions", never, { "style": "style"; "styleClass": "styleClass"; }, {}, never, never>;
}
export declare class DataViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DataViewModule, [typeof DataView, typeof DataViewLayoutOptions], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.PaginatorModule], [typeof DataView, typeof ɵngcc2.SharedModule, typeof DataViewLayoutOptions]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DataViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXcuZC50cyIsInNvdXJjZXMiOlsiZGF0YXZpZXcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBFdmVudEVtaXR0ZXIsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJsb2NrYWJsZVVJIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVZpZXcgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIEJsb2NrYWJsZVVJLCBPbkNoYW5nZXMge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBsYXlvdXQ6IHN0cmluZztcbiAgICBwYWdpbmF0b3I6IGJvb2xlYW47XG4gICAgcm93czogbnVtYmVyO1xuICAgIHRvdGFsUmVjb3JkczogbnVtYmVyO1xuICAgIHBhZ2VMaW5rczogbnVtYmVyO1xuICAgIHJvd3NQZXJQYWdlT3B0aW9uczogYW55W107XG4gICAgcGFnaW5hdG9yUG9zaXRpb246IHN0cmluZztcbiAgICBhbHdheXNTaG93UGFnaW5hdG9yOiBib29sZWFuO1xuICAgIHBhZ2luYXRvckRyb3Bkb3duQXBwZW5kVG86IGFueTtcbiAgICBwYWdpbmF0b3JEcm9wZG93blNjcm9sbEhlaWdodDogc3RyaW5nO1xuICAgIGN1cnJlbnRQYWdlUmVwb3J0VGVtcGxhdGU6IHN0cmluZztcbiAgICBzaG93Q3VycmVudFBhZ2VSZXBvcnQ6IGJvb2xlYW47XG4gICAgbGF6eTogYm9vbGVhbjtcbiAgICBlbXB0eU1lc3NhZ2U6IHN0cmluZztcbiAgICBvbkxhenlMb2FkOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICB0cmFja0J5OiBGdW5jdGlvbjtcbiAgICBmaWx0ZXJCeTogc3RyaW5nO1xuICAgIGZpbHRlckxvY2FsZTogc3RyaW5nO1xuICAgIGxvYWRpbmc6IGJvb2xlYW47XG4gICAgbG9hZGluZ0ljb246IHN0cmluZztcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIHNvcnRGaWVsZDogc3RyaW5nO1xuICAgIHNvcnRPcmRlcjogbnVtYmVyO1xuICAgIHZhbHVlOiBhbnlbXTtcbiAgICBvblBhZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU29ydDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25DaGFuZ2VMYXlvdXQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGhlYWRlcjogYW55O1xuICAgIGZvb3RlcjogYW55O1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgX3ZhbHVlOiBhbnlbXTtcbiAgICBsaXN0SXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGdyaWRJdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZvb3RlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHBhZ2luYXRvckxlZnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBwYWdpbmF0b3JSaWdodFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZpbHRlcmVkVmFsdWU6IGFueVtdO1xuICAgIGZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICB1cGRhdGVJdGVtVGVtcGxhdGUoKTogdm9pZDtcbiAgICBjaGFuZ2VMYXlvdXQobGF5b3V0OiBzdHJpbmcpOiB2b2lkO1xuICAgIHVwZGF0ZVRvdGFsUmVjb3JkcygpOiB2b2lkO1xuICAgIHBhZ2luYXRlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNvcnQoKTogdm9pZDtcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW47XG4gICAgY3JlYXRlTGF6eUxvYWRNZXRhZGF0YSgpOiBhbnk7XG4gICAgZ2V0QmxvY2thYmxlRWxlbWVudCgpOiBIVE1MRWxlbWVudDtcbiAgICBmaWx0ZXIoZmlsdGVyOiBzdHJpbmcsIGZpbHRlck1hdGNoTW9kZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgaGFzRmlsdGVyKCk6IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVmlld0xheW91dE9wdGlvbnMge1xuICAgIGR2OiBEYXRhVmlldztcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihkdjogRGF0YVZpZXcpO1xuICAgIGNoYW5nZUxheW91dChldmVudDogRXZlbnQsIGxheW91dDogc3RyaW5nKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGFWaWV3TW9kdWxlIHtcbn1cbiJdfQ==