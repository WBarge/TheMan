import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/ripple';
export declare const TOGGLEBUTTON_VALUE_ACCESSOR: any;
export declare class ToggleButton implements ControlValueAccessor {
    private cd;
    onLabel: string;
    offLabel: string;
    onIcon: string;
    offIcon: string;
    ariaLabelledBy: string;
    disabled: boolean;
    style: any;
    styleClass: string;
    inputId: string;
    tabindex: number;
    iconPos: string;
    onChange: EventEmitter<any>;
    checked: boolean;
    onModelChange: Function;
    onModelTouched: Function;
    constructor(cd: ChangeDetectorRef);
    toggle(event: Event): void;
    onBlur(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    get hasOnLabel(): boolean;
    get hasOffLabel(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToggleButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToggleButton, "p-toggleButton", never, { "iconPos": "iconPos"; "disabled": "disabled"; "onLabel": "onLabel"; "offLabel": "offLabel"; "onIcon": "onIcon"; "offIcon": "offIcon"; "ariaLabelledBy": "ariaLabelledBy"; "style": "style"; "styleClass": "styleClass"; "inputId": "inputId"; "tabindex": "tabindex"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class ToggleButtonModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToggleButtonModule, [typeof ToggleButton], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.RippleModule], [typeof ToggleButton]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToggleButtonModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlYnV0dG9uLmQudHMiLCJzb3VyY2VzIjpbInRvZ2dsZWJ1dHRvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBUT0dHTEVCVVRUT05fVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRvZ2dsZUJ1dHRvbiBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBwcml2YXRlIGNkO1xuICAgIG9uTGFiZWw6IHN0cmluZztcbiAgICBvZmZMYWJlbDogc3RyaW5nO1xuICAgIG9uSWNvbjogc3RyaW5nO1xuICAgIG9mZkljb246IHN0cmluZztcbiAgICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGlucHV0SWQ6IHN0cmluZztcbiAgICB0YWJpbmRleDogbnVtYmVyO1xuICAgIGljb25Qb3M6IHN0cmluZztcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY2hlY2tlZDogYm9vbGVhbjtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICB0b2dnbGUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkJsdXIoKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICBnZXQgaGFzT25MYWJlbCgpOiBib29sZWFuO1xuICAgIGdldCBoYXNPZmZMYWJlbCgpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9nZ2xlQnV0dG9uTW9kdWxlIHtcbn1cbiJdfQ==