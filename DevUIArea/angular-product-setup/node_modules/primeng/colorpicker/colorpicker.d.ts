import { ElementRef, OnDestroy, EventEmitter, Renderer2, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const COLORPICKER_VALUE_ACCESSOR: any;
export declare class ColorPicker implements ControlValueAccessor, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    cd: ChangeDetectorRef;
    style: any;
    styleClass: string;
    inline: boolean;
    format: string;
    appendTo: string;
    disabled: boolean;
    tabindex: string;
    inputId: string;
    autoZIndex: boolean;
    baseZIndex: number;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onChange: EventEmitter<any>;
    inputViewChild: ElementRef;
    value: any;
    inputBgColor: string;
    shown: boolean;
    overlayVisible: boolean;
    defaultColor: string;
    onModelChange: Function;
    onModelTouched: Function;
    documentClickListener: Function;
    documentMousemoveListener: Function;
    documentMouseupListener: Function;
    documentHueMoveListener: Function;
    selfClick: boolean;
    colorDragging: boolean;
    hueDragging: boolean;
    overlay: HTMLDivElement;
    colorSelectorViewChild: ElementRef;
    colorHandleViewChild: ElementRef;
    hueViewChild: ElementRef;
    hueHandleViewChild: ElementRef;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);
    set colorSelector(element: ElementRef);
    set colorHandle(element: ElementRef);
    set hue(element: ElementRef);
    set hueHandle(element: ElementRef);
    onHueMousedown(event: MouseEvent): void;
    pickHue(event: MouseEvent): void;
    onColorMousedown(event: MouseEvent): void;
    pickColor(event: MouseEvent): void;
    getValueToUpdate(): any;
    updateModel(): void;
    writeValue(value: any): void;
    updateColorSelector(): void;
    updateUI(): void;
    onInputFocus(): void;
    show(): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    appendOverlay(): void;
    restoreOverlayAppend(): void;
    alignOverlay(): void;
    hide(): void;
    onInputClick(): void;
    togglePanel(): void;
    onInputKeydown(event: KeyboardEvent): void;
    onPanelClick(): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    bindDocumentMousemoveListener(): void;
    unbindDocumentMousemoveListener(): void;
    bindDocumentMouseupListener(): void;
    unbindDocumentMouseupListener(): void;
    validateHSB(hsb: any): {
        h: number;
        s: number;
        b: number;
    };
    validateRGB(rgb: any): {
        r: number;
        g: number;
        b: number;
    };
    validateHEX(hex: any): any;
    HEXtoRGB(hex: any): {
        r: number;
        g: number;
        b: number;
    };
    HEXtoHSB(hex: any): {
        h: number;
        s: number;
        b: number;
    };
    RGBtoHSB(rgb: any): {
        h: number;
        s: number;
        b: number;
    };
    HSBtoRGB(hsb: any): {
        r: number;
        g: number;
        b: number;
    };
    RGBtoHEX(rgb: any): string;
    HSBtoHEX(hsb: any): string;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorPicker, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColorPicker, "p-colorPicker", never, { "format": "format"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "disabled": "disabled"; "style": "style"; "styleClass": "styleClass"; "inline": "inline"; "appendTo": "appendTo"; "tabindex": "tabindex"; "inputId": "inputId"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class ColorPickerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorPickerModule, [typeof ColorPicker], [typeof ɵngcc1.CommonModule], [typeof ColorPicker]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorPickerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JwaWNrZXIuZC50cyIsInNvdXJjZXMiOlsiY29sb3JwaWNrZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IENPTE9SUElDS0VSX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2xvclBpY2tlciBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGlubGluZTogYm9vbGVhbjtcbiAgICBmb3JtYXQ6IHN0cmluZztcbiAgICBhcHBlbmRUbzogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHRhYmluZGV4OiBzdHJpbmc7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbnB1dFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB2YWx1ZTogYW55O1xuICAgIGlucHV0QmdDb2xvcjogc3RyaW5nO1xuICAgIHNob3duOiBib29sZWFuO1xuICAgIG92ZXJsYXlWaXNpYmxlOiBib29sZWFuO1xuICAgIGRlZmF1bHRDb2xvcjogc3RyaW5nO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudENsaWNrTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIGRvY3VtZW50TW91c2Vtb3ZlTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIGRvY3VtZW50TW91c2V1cExpc3RlbmVyOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudEh1ZU1vdmVMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgc2VsZkNsaWNrOiBib29sZWFuO1xuICAgIGNvbG9yRHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgaHVlRHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgb3ZlcmxheTogSFRNTERpdkVsZW1lbnQ7XG4gICAgY29sb3JTZWxlY3RvclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBjb2xvckhhbmRsZVZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBodWVWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgaHVlSGFuZGxlVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIHNldCBjb2xvclNlbGVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIHNldCBjb2xvckhhbmRsZShlbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBzZXQgaHVlKGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIHNldCBodWVIYW5kbGUoZWxlbWVudDogRWxlbWVudFJlZik7XG4gICAgb25IdWVNb3VzZWRvd24oZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHBpY2tIdWUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uQ29sb3JNb3VzZWRvd24oZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHBpY2tDb2xvcihldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgZ2V0VmFsdWVUb1VwZGF0ZSgpOiBhbnk7XG4gICAgdXBkYXRlTW9kZWwoKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZUNvbG9yU2VsZWN0b3IoKTogdm9pZDtcbiAgICB1cGRhdGVVSSgpOiB2b2lkO1xuICAgIG9uSW5wdXRGb2N1cygpOiB2b2lkO1xuICAgIHNob3coKTogdm9pZDtcbiAgICBvbk92ZXJsYXlBbmltYXRpb25TdGFydChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIGFwcGVuZE92ZXJsYXkoKTogdm9pZDtcbiAgICByZXN0b3JlT3ZlcmxheUFwcGVuZCgpOiB2b2lkO1xuICAgIGFsaWduT3ZlcmxheSgpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICBvbklucHV0Q2xpY2soKTogdm9pZDtcbiAgICB0b2dnbGVQYW5lbCgpOiB2b2lkO1xuICAgIG9uSW5wdXRLZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvblBhbmVsQ2xpY2soKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudE1vdXNlbW92ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRNb3VzZW1vdmVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudE1vdXNldXBMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50TW91c2V1cExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdmFsaWRhdGVIU0IoaHNiOiBhbnkpOiB7XG4gICAgICAgIGg6IG51bWJlcjtcbiAgICAgICAgczogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICB2YWxpZGF0ZVJHQihyZ2I6IGFueSk6IHtcbiAgICAgICAgcjogbnVtYmVyO1xuICAgICAgICBnOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIHZhbGlkYXRlSEVYKGhleDogYW55KTogYW55O1xuICAgIEhFWHRvUkdCKGhleDogYW55KToge1xuICAgICAgICByOiBudW1iZXI7XG4gICAgICAgIGc6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgSEVYdG9IU0IoaGV4OiBhbnkpOiB7XG4gICAgICAgIGg6IG51bWJlcjtcbiAgICAgICAgczogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICBSR0J0b0hTQihyZ2I6IGFueSk6IHtcbiAgICAgICAgaDogbnVtYmVyO1xuICAgICAgICBzOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIEhTQnRvUkdCKGhzYjogYW55KToge1xuICAgICAgICByOiBudW1iZXI7XG4gICAgICAgIGc6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgUkdCdG9IRVgocmdiOiBhbnkpOiBzdHJpbmc7XG4gICAgSFNCdG9IRVgoaHNiOiBhbnkpOiBzdHJpbmc7XG4gICAgb25PdmVybGF5SGlkZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2xvclBpY2tlck1vZHVsZSB7XG59XG4iXX0=