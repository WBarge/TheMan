import { ElementRef, AfterContentInit, AfterViewChecked, QueryList, TemplateRef, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
import * as ɵngcc4 from 'primeng/ripple';
export declare class PickList implements AfterViewChecked, AfterContentInit {
    el: ElementRef;
    source: any[];
    target: any[];
    sourceHeader: string;
    targetHeader: string;
    responsive: boolean;
    filterBy: string;
    filterLocale: string;
    trackBy: Function;
    sourceTrackBy: Function;
    targetTrackBy: Function;
    showSourceFilter: boolean;
    showTargetFilter: boolean;
    metaKeySelection: boolean;
    dragdrop: boolean;
    style: any;
    styleClass: string;
    sourceStyle: any;
    targetStyle: any;
    showSourceControls: boolean;
    showTargetControls: boolean;
    sourceFilterPlaceholder: string;
    targetFilterPlaceholder: string;
    disabled: boolean;
    ariaSourceFilterLabel: string;
    ariaTargetFilterLabel: string;
    filterMatchMode: string;
    onMoveToSource: EventEmitter<any>;
    onMoveAllToSource: EventEmitter<any>;
    onMoveAllToTarget: EventEmitter<any>;
    onMoveToTarget: EventEmitter<any>;
    onSourceReorder: EventEmitter<any>;
    onTargetReorder: EventEmitter<any>;
    onSourceSelect: EventEmitter<any>;
    onTargetSelect: EventEmitter<any>;
    onSourceFilter: EventEmitter<any>;
    onTargetFilter: EventEmitter<any>;
    listViewSourceChild: ElementRef;
    listViewTargetChild: ElementRef;
    sourceFilterViewChild: ElementRef;
    targetFilterViewChild: ElementRef;
    templates: QueryList<any>;
    itemTemplate: TemplateRef<any>;
    visibleOptionsSource: any[];
    visibleOptionsTarget: any[];
    selectedItemsSource: any[];
    selectedItemsTarget: any[];
    reorderedListElement: any;
    draggedItemIndexSource: number;
    draggedItemIndexTarget: number;
    dragOverItemIndexSource: number;
    dragOverItemIndexTarget: number;
    dragging: boolean;
    movedUp: boolean;
    movedDown: boolean;
    itemTouched: boolean;
    filterValueSource: string;
    filterValueTarget: string;
    fromListType: number;
    toListType: number;
    onListItemDroppoint: boolean;
    listHighlightTarget: boolean;
    listHighlightSource: boolean;
    emptyMessageSourceTemplate: TemplateRef<any>;
    emptyMessageTargetTemplate: TemplateRef<any>;
    readonly SOURCE_LIST = -1;
    readonly TARGET_LIST = 1;
    constructor(el: ElementRef);
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    onItemClick(event: any, item: any, selectedItems: any[], callback: EventEmitter<any>): void;
    onSourceItemDblClick(): void;
    onTargetItemDblClick(): void;
    onFilter(event: KeyboardEvent, data: any[], listType: number): void;
    filter(query: string, data: any[], listType: number): void;
    isItemVisible(item: any, listType: number): boolean;
    isVisibleInList(data: any[], item: any, filterValue: string): boolean;
    onItemTouchEnd(event: any): void;
    private sortByIndexInList;
    moveUp(listElement: any, list: any, selectedItems: any, callback: any): void;
    moveTop(listElement: any, list: any, selectedItems: any, callback: any): void;
    moveDown(listElement: any, list: any, selectedItems: any, callback: any): void;
    moveBottom(listElement: any, list: any, selectedItems: any, callback: any): void;
    moveRight(): void;
    moveAllRight(): void;
    moveLeft(): void;
    moveAllLeft(): void;
    isSelected(item: any, selectedItems: any[]): boolean;
    findIndexInSelection(item: any, selectedItems: any[]): number;
    findIndexInList(item: any, list: any): number;
    onDragStart(event: DragEvent, index: number, listType: number): void;
    onDragOver(event: DragEvent, index: number, listType: number): void;
    onDragLeave(event: DragEvent, listType: number): void;
    onDrop(event: DragEvent, index: number, listType: number): void;
    onDragEnd(event: DragEvent): void;
    onListDrop(event: DragEvent, listType: number): void;
    insert(fromIndex: any, fromList: any, toIndex: any, toList: any, callback: any): void;
    onListMouseMove(event: MouseEvent, listType: number): void;
    onListDragLeave(): void;
    resetFilter(): void;
    onItemKeydown(event: KeyboardEvent, item: any, selectedItems: any[], callback: EventEmitter<any>): void;
    findNextItem(item: any): any;
    findPrevItem(item: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PickList, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PickList, "p-pickList", never, { "trackBy": "trackBy"; "showSourceFilter": "showSourceFilter"; "showTargetFilter": "showTargetFilter"; "metaKeySelection": "metaKeySelection"; "showSourceControls": "showSourceControls"; "showTargetControls": "showTargetControls"; "disabled": "disabled"; "filterMatchMode": "filterMatchMode"; "source": "source"; "target": "target"; "sourceHeader": "sourceHeader"; "targetHeader": "targetHeader"; "responsive": "responsive"; "filterBy": "filterBy"; "filterLocale": "filterLocale"; "sourceTrackBy": "sourceTrackBy"; "targetTrackBy": "targetTrackBy"; "dragdrop": "dragdrop"; "style": "style"; "styleClass": "styleClass"; "sourceStyle": "sourceStyle"; "targetStyle": "targetStyle"; "sourceFilterPlaceholder": "sourceFilterPlaceholder"; "targetFilterPlaceholder": "targetFilterPlaceholder"; "ariaSourceFilterLabel": "ariaSourceFilterLabel"; "ariaTargetFilterLabel": "ariaTargetFilterLabel"; }, { "onMoveToSource": "onMoveToSource"; "onMoveAllToSource": "onMoveAllToSource"; "onMoveAllToTarget": "onMoveAllToTarget"; "onMoveToTarget": "onMoveToTarget"; "onSourceReorder": "onSourceReorder"; "onTargetReorder": "onTargetReorder"; "onSourceSelect": "onSourceSelect"; "onTargetSelect": "onTargetSelect"; "onSourceFilter": "onSourceFilter"; "onTargetFilter": "onTargetFilter"; }, ["templates"], never>;
}
export declare class PickListModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<PickListModule, [typeof PickList], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule, typeof ɵngcc4.RippleModule], [typeof PickList, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<PickListModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2xpc3QuZC50cyIsInNvdXJjZXMiOlsicGlja2xpc3QuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdDaGVja2VkLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBpY2tMaXN0IGltcGxlbWVudHMgQWZ0ZXJWaWV3Q2hlY2tlZCwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgc291cmNlOiBhbnlbXTtcbiAgICB0YXJnZXQ6IGFueVtdO1xuICAgIHNvdXJjZUhlYWRlcjogc3RyaW5nO1xuICAgIHRhcmdldEhlYWRlcjogc3RyaW5nO1xuICAgIHJlc3BvbnNpdmU6IGJvb2xlYW47XG4gICAgZmlsdGVyQnk6IHN0cmluZztcbiAgICBmaWx0ZXJMb2NhbGU6IHN0cmluZztcbiAgICB0cmFja0J5OiBGdW5jdGlvbjtcbiAgICBzb3VyY2VUcmFja0J5OiBGdW5jdGlvbjtcbiAgICB0YXJnZXRUcmFja0J5OiBGdW5jdGlvbjtcbiAgICBzaG93U291cmNlRmlsdGVyOiBib29sZWFuO1xuICAgIHNob3dUYXJnZXRGaWx0ZXI6IGJvb2xlYW47XG4gICAgbWV0YUtleVNlbGVjdGlvbjogYm9vbGVhbjtcbiAgICBkcmFnZHJvcDogYm9vbGVhbjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBzb3VyY2VTdHlsZTogYW55O1xuICAgIHRhcmdldFN0eWxlOiBhbnk7XG4gICAgc2hvd1NvdXJjZUNvbnRyb2xzOiBib29sZWFuO1xuICAgIHNob3dUYXJnZXRDb250cm9sczogYm9vbGVhbjtcbiAgICBzb3VyY2VGaWx0ZXJQbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIHRhcmdldEZpbHRlclBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgYXJpYVNvdXJjZUZpbHRlckxhYmVsOiBzdHJpbmc7XG4gICAgYXJpYVRhcmdldEZpbHRlckxhYmVsOiBzdHJpbmc7XG4gICAgZmlsdGVyTWF0Y2hNb2RlOiBzdHJpbmc7XG4gICAgb25Nb3ZlVG9Tb3VyY2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uTW92ZUFsbFRvU291cmNlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk1vdmVBbGxUb1RhcmdldDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Nb3ZlVG9UYXJnZXQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU291cmNlUmVvcmRlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25UYXJnZXRSZW9yZGVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblNvdXJjZVNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25UYXJnZXRTZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU291cmNlRmlsdGVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblRhcmdldEZpbHRlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbGlzdFZpZXdTb3VyY2VDaGlsZDogRWxlbWVudFJlZjtcbiAgICBsaXN0Vmlld1RhcmdldENoaWxkOiBFbGVtZW50UmVmO1xuICAgIHNvdXJjZUZpbHRlclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB0YXJnZXRGaWx0ZXJWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdmlzaWJsZU9wdGlvbnNTb3VyY2U6IGFueVtdO1xuICAgIHZpc2libGVPcHRpb25zVGFyZ2V0OiBhbnlbXTtcbiAgICBzZWxlY3RlZEl0ZW1zU291cmNlOiBhbnlbXTtcbiAgICBzZWxlY3RlZEl0ZW1zVGFyZ2V0OiBhbnlbXTtcbiAgICByZW9yZGVyZWRMaXN0RWxlbWVudDogYW55O1xuICAgIGRyYWdnZWRJdGVtSW5kZXhTb3VyY2U6IG51bWJlcjtcbiAgICBkcmFnZ2VkSXRlbUluZGV4VGFyZ2V0OiBudW1iZXI7XG4gICAgZHJhZ092ZXJJdGVtSW5kZXhTb3VyY2U6IG51bWJlcjtcbiAgICBkcmFnT3Zlckl0ZW1JbmRleFRhcmdldDogbnVtYmVyO1xuICAgIGRyYWdnaW5nOiBib29sZWFuO1xuICAgIG1vdmVkVXA6IGJvb2xlYW47XG4gICAgbW92ZWREb3duOiBib29sZWFuO1xuICAgIGl0ZW1Ub3VjaGVkOiBib29sZWFuO1xuICAgIGZpbHRlclZhbHVlU291cmNlOiBzdHJpbmc7XG4gICAgZmlsdGVyVmFsdWVUYXJnZXQ6IHN0cmluZztcbiAgICBmcm9tTGlzdFR5cGU6IG51bWJlcjtcbiAgICB0b0xpc3RUeXBlOiBudW1iZXI7XG4gICAgb25MaXN0SXRlbURyb3Bwb2ludDogYm9vbGVhbjtcbiAgICBsaXN0SGlnaGxpZ2h0VGFyZ2V0OiBib29sZWFuO1xuICAgIGxpc3RIaWdobGlnaHRTb3VyY2U6IGJvb2xlYW47XG4gICAgZW1wdHlNZXNzYWdlU291cmNlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZW1wdHlNZXNzYWdlVGFyZ2V0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgcmVhZG9ubHkgU09VUkNFX0xJU1QgPSAtMTtcbiAgICByZWFkb25seSBUQVJHRVRfTElTVCA9IDE7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIG9uSXRlbUNsaWNrKGV2ZW50OiBhbnksIGl0ZW06IGFueSwgc2VsZWN0ZWRJdGVtczogYW55W10sIGNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55Pik6IHZvaWQ7XG4gICAgb25Tb3VyY2VJdGVtRGJsQ2xpY2soKTogdm9pZDtcbiAgICBvblRhcmdldEl0ZW1EYmxDbGljaygpOiB2b2lkO1xuICAgIG9uRmlsdGVyKGV2ZW50OiBLZXlib2FyZEV2ZW50LCBkYXRhOiBhbnlbXSwgbGlzdFR5cGU6IG51bWJlcik6IHZvaWQ7XG4gICAgZmlsdGVyKHF1ZXJ5OiBzdHJpbmcsIGRhdGE6IGFueVtdLCBsaXN0VHlwZTogbnVtYmVyKTogdm9pZDtcbiAgICBpc0l0ZW1WaXNpYmxlKGl0ZW06IGFueSwgbGlzdFR5cGU6IG51bWJlcik6IGJvb2xlYW47XG4gICAgaXNWaXNpYmxlSW5MaXN0KGRhdGE6IGFueVtdLCBpdGVtOiBhbnksIGZpbHRlclZhbHVlOiBzdHJpbmcpOiBib29sZWFuO1xuICAgIG9uSXRlbVRvdWNoRW5kKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgc29ydEJ5SW5kZXhJbkxpc3Q7XG4gICAgbW92ZVVwKGxpc3RFbGVtZW50OiBhbnksIGxpc3Q6IGFueSwgc2VsZWN0ZWRJdGVtczogYW55LCBjYWxsYmFjazogYW55KTogdm9pZDtcbiAgICBtb3ZlVG9wKGxpc3RFbGVtZW50OiBhbnksIGxpc3Q6IGFueSwgc2VsZWN0ZWRJdGVtczogYW55LCBjYWxsYmFjazogYW55KTogdm9pZDtcbiAgICBtb3ZlRG93bihsaXN0RWxlbWVudDogYW55LCBsaXN0OiBhbnksIHNlbGVjdGVkSXRlbXM6IGFueSwgY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgbW92ZUJvdHRvbShsaXN0RWxlbWVudDogYW55LCBsaXN0OiBhbnksIHNlbGVjdGVkSXRlbXM6IGFueSwgY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgbW92ZVJpZ2h0KCk6IHZvaWQ7XG4gICAgbW92ZUFsbFJpZ2h0KCk6IHZvaWQ7XG4gICAgbW92ZUxlZnQoKTogdm9pZDtcbiAgICBtb3ZlQWxsTGVmdCgpOiB2b2lkO1xuICAgIGlzU2VsZWN0ZWQoaXRlbTogYW55LCBzZWxlY3RlZEl0ZW1zOiBhbnlbXSk6IGJvb2xlYW47XG4gICAgZmluZEluZGV4SW5TZWxlY3Rpb24oaXRlbTogYW55LCBzZWxlY3RlZEl0ZW1zOiBhbnlbXSk6IG51bWJlcjtcbiAgICBmaW5kSW5kZXhJbkxpc3QoaXRlbTogYW55LCBsaXN0OiBhbnkpOiBudW1iZXI7XG4gICAgb25EcmFnU3RhcnQoZXZlbnQ6IERyYWdFdmVudCwgaW5kZXg6IG51bWJlciwgbGlzdFR5cGU6IG51bWJlcik6IHZvaWQ7XG4gICAgb25EcmFnT3ZlcihldmVudDogRHJhZ0V2ZW50LCBpbmRleDogbnVtYmVyLCBsaXN0VHlwZTogbnVtYmVyKTogdm9pZDtcbiAgICBvbkRyYWdMZWF2ZShldmVudDogRHJhZ0V2ZW50LCBsaXN0VHlwZTogbnVtYmVyKTogdm9pZDtcbiAgICBvbkRyb3AoZXZlbnQ6IERyYWdFdmVudCwgaW5kZXg6IG51bWJlciwgbGlzdFR5cGU6IG51bWJlcik6IHZvaWQ7XG4gICAgb25EcmFnRW5kKGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkO1xuICAgIG9uTGlzdERyb3AoZXZlbnQ6IERyYWdFdmVudCwgbGlzdFR5cGU6IG51bWJlcik6IHZvaWQ7XG4gICAgaW5zZXJ0KGZyb21JbmRleDogYW55LCBmcm9tTGlzdDogYW55LCB0b0luZGV4OiBhbnksIHRvTGlzdDogYW55LCBjYWxsYmFjazogYW55KTogdm9pZDtcbiAgICBvbkxpc3RNb3VzZU1vdmUoZXZlbnQ6IE1vdXNlRXZlbnQsIGxpc3RUeXBlOiBudW1iZXIpOiB2b2lkO1xuICAgIG9uTGlzdERyYWdMZWF2ZSgpOiB2b2lkO1xuICAgIHJlc2V0RmlsdGVyKCk6IHZvaWQ7XG4gICAgb25JdGVtS2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCwgaXRlbTogYW55LCBzZWxlY3RlZEl0ZW1zOiBhbnlbXSwgY2FsbGJhY2s6IEV2ZW50RW1pdHRlcjxhbnk+KTogdm9pZDtcbiAgICBmaW5kTmV4dEl0ZW0oaXRlbTogYW55KTogYW55O1xuICAgIGZpbmRQcmV2SXRlbShpdGVtOiBhbnkpOiBhbnk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQaWNrTGlzdE1vZHVsZSB7XG59XG4iXX0=