{"version":3,"file":"primeng-inputtext.umd.js","sources":["ng:/primeng/inputtext/inputtext.ts"],"names":["ElementRef","NgModel","Optional","Directive","HostListener","NgModule","CommonModule"],"mappings":";;;;;;;QAgBI,mBAAmB,EAAc,EAAqB,OAAgB;AAAI,YAAvD,OAAE,GAAF,EAAE,CAAY;AAAC,YAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,SAAG;AAC9E,QACI,6BAAS,GAAT;AACJ,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ,QAEG,2BAAO,GADP,UACQ,CAAC;AACb,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ,QACG,qCAAiB,GAAjB;AAAc,YACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,iBAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,SAAK;AACJ;AAIc,oBAnBYA,eAAU;AAAI,oBAA0BC,aAAO,uBAAlCC,aAAQ;AAAM,aAJzC;qDARZC,rDAQa;SARJ,SAAC,lBAYN,oBAhBsBH,eAAU;KAKjC,QAAQ,EAAE,cAAc,0BACxB,IAAI,EAAE,7DAN+B,oBACjCC,aAAO,uBAeyBC,aAAQ;AAAM;EAT9C,qBAAqB,EAAE,MAAM,/BAS+B;wBAR5D,qBAAqB,EAAE,MAAM,rDAUpB,8BAIZE,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;EAb7B,FAcL;SAduB,EAAE,QAAQ,0BAC/B,sBACJ;;;;;;;;;;;;;;;;;;;;;oBAYY;AAAC,QAQd,gBAAC;AAED,KA7BA,IA2BC;AACD;AAGa,QAFb;AACiB,SAIe;2DAL/BC,aAAQ;MAAC,0BACN,OAAO,EAAE,CAACC,mBAAY,CAAC,0BACvB,OAAO,EAAE,CAAC,SAAS,CAAC,0BACpB,YAAY,EAAE,CAAC,SAAS,CAAC;QAC5B;;;;;;;;gDACY;AAAC,QAAiB,sBAAC;AAAE,KALlC;AAAK;AAAC;AAEN;AACqB;AAAC;AAEkC;AAAC;AAAM","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }"]}