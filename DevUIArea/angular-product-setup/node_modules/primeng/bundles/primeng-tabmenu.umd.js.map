{"version":3,"file":"primeng-tabmenu.umd.js","sources":["ng:/primeng/tabmenu/tabmenu.ts"],"names":["DomHandler","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","ContentChildren","PrimeTemplate","NgModule","CommonModule","RouterModule","SharedModule","RippleModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,ContentChildren,QueryList,AfterContentInit,AfterViewInit,AfterViewChecked,TemplateRef,ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {PrimeTemplate, SharedModule} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-tabMenu',\n    template: `\n        <div [ngClass]=\"'p-tabmenu p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul #navbar class=\"p-tabmenu-nav p-reset\" role=\"tablist\">\n                <li *ngFor=\"let item of model; let i = index\" role=\"tab\" [attr.aria-selected]=\"activeItem==item\" [attr.aria-expanded]=\"activeItem==item\"\n                    [ngClass]=\"{'p-tabmenuitem':true,'p-disabled':item.disabled,'p-highlight':activeItem==item,'p-hidden': item.visible === false}\">\n                    <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" class=\"p-menuitem-link\" role=\"presentation\" (click)=\"itemClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                        [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\" pRipple>\n                        <ng-container *ngIf=\"!itemTemplate\">\n                            <span class=\"p-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                            <span class=\"p-menuitem-text\">{{item.label}}</span>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                    </a>\n                    <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                        role=\"presentation\" class=\"p-menuitem-link\" (click)=\"itemClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                        [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\n                        [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" pRipple>\n                        <ng-container *ngIf=\"!itemTemplate\">\n                            <span class=\"p-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                            <span class=\"p-menuitem-text\">{{item.label}}</span>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                    </a>\n                </li>\n                <li #inkbar class=\"p-tabmenu-ink-bar\"></li>\n            </ul>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./tabmenu.css']\n})\nexport class TabMenu implements AfterContentInit,AfterViewInit,AfterViewChecked {\n\n    @Input() model: MenuItem[];\n\n    @Input() activeItem: MenuItem;\n\n    @Input() popup: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @ViewChild('navbar') navbar: ElementRef;\n\n    @ViewChild('inkbar') inkbar: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    itemTemplate: TemplateRef<any>;\n\n    tabChanged: boolean;\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n                \n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        this.updateInkBar();\n    }\n\n    ngAfterViewChecked() {\n        if (this.tabChanged) {\n            this.updateInkBar();\n            this.tabChanged = false;\n        }\n    }\n\n    itemClick(event: Event, item: MenuItem)Â {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n\n        this.activeItem = item;\n        this.tabChanged = true;\n    }\n\n    updateInkBar() {\n        let tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n        if (tabHeader) {\n            this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n            this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule,SharedModule,RippleModule],\n    exports: [TabMenu,RouterModule,SharedModule],\n    declarations: [TabMenu]\n})\nexport class TabMenuModule { }\n"]}