{"version":3,"file":"primeng-blockui.umd.js","sources":["ng:/primeng/blockui/blockui.ts"],"names":["DomHandler","ElementRef","ChangeDetectorRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ContentChildren","PrimeTemplate","ViewChild","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ContentChildren, QueryList, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {PrimeTemplate} from 'primeng/api';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'p-blockui-document':!target, 'p-blockui p-component-overlay': true}\" [ngStyle]=\"{display: blocked ? 'flex' : 'none'}\">\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./blockui.css']\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n\n    contentTemplate: TemplateRef<any>;\n        \n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            this.target.getBlockableElement().style.position = 'relative';\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }"]}