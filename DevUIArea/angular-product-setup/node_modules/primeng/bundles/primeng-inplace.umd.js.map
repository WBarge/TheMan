{"version":3,"file":"primeng-inplace.umd.js","sources":["ng:/primeng/inplace/inplace.ts"],"names":["Component","EventEmitter","ChangeDetectorRef","ChangeDetectionStrategy","ViewEncapsulation","Input","ContentChildren","PrimeTemplate","Output","NgModule","CommonModule","ButtonModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, AfterContentInit, TemplateRef, QueryList, ContentChildren} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from 'primeng/button';\nimport {PrimeTemplate} from 'primeng/api';\n\n@Component({\n    selector: 'p-inplaceDisplay',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceDisplay {}\n\n@Component({\n    selector: 'p-inplaceContent',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceContent {}\n\n@Component({\n    selector: 'p-inplace',\n    template: `\n        <div [ngClass]=\"{'p-inplace p-component': true, 'p-inplace-closable': closable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-inplace-display\" (click)=\"onActivateClick($event)\" tabindex=\"0\" (keydown)=\"onKeydown($event)\"   \n                [ngClass]=\"{'p-disabled':disabled}\" *ngIf=\"!active\">\n                <ng-content select=\"[pInplaceDisplay]\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"displayTemplate\"></ng-container>\n            </div>\n            <div class=\"p-inplace-content\" *ngIf=\"active\">\n                <ng-content select=\"[pInplaceContent]\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                <button type=\"button\" [icon]=\"closeIcon\" pButton (click)=\"onDeactivateClick($event)\" *ngIf=\"closable\"></button>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./inplace.css']\n})\nexport class Inplace implements AfterContentInit {\n\n    @Input() active: boolean;\n\n    @Input() closable: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() preventClick: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() onActivate: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDeactivate: EventEmitter<any> = new EventEmitter();\n\n    hover: boolean;\n\n    displayTemplate: TemplateRef<any>;\n\n    contentTemplate: TemplateRef<any>;\n\n    constructor(public cd: ChangeDetectorRef) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'display':\n                    this.displayTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    onActivateClick(event) {\n        if (!this.preventClick)\n            this.activate(event);\n    }\n\n    onDeactivateClick(event) {\n        if (!this.preventClick)\n            this.deactivate(event);\n    }\n\n    activate(event?: Event) {\n        if (!this.disabled) {\n            this.active = true;\n            this.onActivate.emit(event);\n            this.cd.markForCheck();\n        }\n    }\n\n    deactivate(event?: Event) {\n        if (!this.disabled) {\n            this.active = false;\n            this.hover = false;\n            this.onDeactivate.emit(event);\n            this.cd.markForCheck();\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.which === 13) {\n            this.activate(event);\n            event.preventDefault();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [Inplace,InplaceDisplay,InplaceContent,ButtonModule],\n    declarations: [Inplace,InplaceDisplay,InplaceContent]\n})\nexport class InplaceModule { }\n"]}