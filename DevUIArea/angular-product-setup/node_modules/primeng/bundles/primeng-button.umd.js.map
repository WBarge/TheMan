{"version":3,"file":"primeng-button.umd.js","sources":["ng:/primeng/button/button.ts"],"names":["DomHandler","ElementRef","Directive","Input","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChildren","PrimeTemplate","Output","NgModule","CommonModule","RippleModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\nimport {RippleModule} from 'primeng/ripple'; \nimport {PrimeTemplate} from 'primeng/api'; \n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n    \n    public _initialStyleClass: string;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n        if (this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.className = 'p-button-icon';\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n            if (iconPosClass) {\n                DomHandler.addClass(iconElement, iconPosClass);\n            }\n            DomHandler.addMultipleClasses(iconElement, this.icon);\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n        labelElement.appendChild(document.createTextNode(this.label||'&nbsp;'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'p-button p-component';\n        if (this.icon && !this.label) {\n            styleClass = styleClass + ' p-button-icon-only';\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            if (this.iconPos)\n                DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this._icon;\n            else\n                DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon ' + this._icon;\n\n            this.setStyleClass();\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"'p-badge'\" *ngIf=\"badge\" [class]=\"badgeClass\">{{badge}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Button implements AfterContentInit {\n\n    @Input() type: string = \"button\";\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() badge: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() badgeClass: string;\n\n    contentTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n"]}