{"version":3,"file":"primeng-panelmenu.umd.js","sources":["ng:/primeng/panelmenu/panelmenu.ts"],"names":["ChangeDetectorRef","Component","trigger","state","style","transition","animate","ViewEncapsulation","Input","ChangeDetectionStrategy","NgModule","CommonModule","RouterModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\nexport class BasePanelMenuItem {\n\n    constructor(private ref: ChangeDetectorRef) {}\n        \n    handleClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        item.expanded = !item.expanded;\n        this.ref.detectChanges();\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n                   \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n}\n\n@Component({\n    selector: 'p-panelMenuSub',\n    template: `\n        <ul [ngClass]=\"{'p-submenu-list': true, 'p-panelmenu-root-submenu': root}\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\n                <li *ngIf=\"child.separator\" class=\"p-menu-separator\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" class=\"p-menuitem\" [ngClass]=\"child.styleClass\" [class.p-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"p-menuitem-link\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'p-disabled':child.disabled}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\n                        <span class=\"p-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-angle-right':!child.expanded,'pi-angle-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"p-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"p-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"p-menuitem-link\" \n                        [ngClass]=\"{'p-disabled':child.disabled}\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"p-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-angle-right':!child.expanded,'pi-angle-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"p-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"p-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `,\n    animations: [\n        trigger('submenu', [\n            state('hidden', style({\n                height: '0',\n                overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', [style({overflow: 'hidden'}), animate('{{transitionParams}}')]),\n            transition('void => *', animate(0))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PanelMenuSub extends BasePanelMenuItem {\n    \n    @Input() item: MenuItem;\n    \n    @Input() expanded: boolean;\n\n    @Input() transitionOptions: string;\n\n    @Input() root: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n}\n\n@Component({\n    selector: 'p-panelMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'p-panelmenu p-component'\">\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\n                <div class=\"p-panelmenu-panel\" [ngClass]=\"{'p-hidden': item.visible === false}\">\n                    <div [ngClass]=\"{'p-component p-panelmenu-header':true, 'p-highlight':item.expanded,'p-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\n                        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\" [attr.id]=\"item.id\"\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"p-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\n                        <span *ngIf=\"item.items\" class=\"p-panelmenu-icon pi\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"p-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"p-menuitem-text\">{{item.label}}</span>\n                        </a>\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"p-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span *ngIf=\"item.items\" class=\"p-panelmenu-icon pi\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"p-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"p-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"item.items\" class=\"p-toggleable-content\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\">\n                        <div class=\"p-panelmenu-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" [root]=\"true\"></p-panelMenuSub>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    animations: [\n        trigger('rootItem', [\n            state('hidden', style({\n                height: '0',\n                overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', [style({overflow: 'hidden'}), animate('{{transitionParams}}')]),\n            transition('void => *', animate(0))\n        ])\n    ],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./panelmenu.css']\n})\nexport class PanelMenu extends BasePanelMenuItem {\n    \n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() multiple: boolean = true;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n                \n    collapseAll() {\n    \tfor(let item of this.model) {\n    \t\tif (item.expanded) {\n    \t\t\titem.expanded = false;\n    \t\t}\n    \t}\n    }\n\n    handleClick(event, item) {\n    \tif (!this.multiple) {\n            for(let modelItem of this.model) {\n        \t\tif (item !== modelItem && modelItem.expanded) {\n        \t\t\tmodelItem.expanded = false;\n        \t\t}\n        \t}\n    \t}\n        \n        this.animating = true;\n        super.handleClick(event, item);\n    }\n    \n    onToggleDone() {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [PanelMenu,RouterModule],\n    declarations: [PanelMenu,PanelMenuSub]\n})\nexport class PanelMenuModule { }\n"]}