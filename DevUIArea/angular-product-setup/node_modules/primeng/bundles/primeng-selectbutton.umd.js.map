{"version":3,"file":"primeng-selectbutton.umd.js","sources":["ng:/primeng/selectbutton/selectbutton.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ObjectUtils","ChangeDetectorRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ContentChild","TemplateRef","NgModule","CommonModule","RippleModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ContentChild,TemplateRef,SimpleChanges,OnChanges,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectItem} from 'primeng/api';\nimport {ObjectUtils} from 'primeng/utils';\nimport {RippleModule} from 'primeng/ripple';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const SELECTBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-selectButton',\n    template: `\n        <div [ngClass]=\"'p-selectbutton p-buttonset p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"group\">\n            <div *ngFor=\"let option of options; let i = index\" #btn class=\"p-button p-component\" [class]=\"option.styleClass\" role=\"button\" [attr.aria-pressed]=\"isSelected(option)\"\n                [ngClass]=\"{'p-highlight':isSelected(option), 'p-disabled': disabled || option.disabled, \n                'p-button-icon-only': (option.icon && !option.label)}\" (click)=\"onItemClick($event,option,i)\" (keydown.enter)=\"onItemClick($event,option,i)\"\n                [attr.title]=\"option.title\" [attr.aria-label]=\"option.label\" (blur)=\"onBlur($event)\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\" pRipple>\n                <ng-container *ngIf=\"!itemTemplate else customcontent\">\n                    <span [ngClass]=\"'p-button-icon p-button-icon-left'\" [class]=\"option.icon\" *ngIf=\"option.icon\"></span>\n                    <span class=\"p-button-label\">{{option.label}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    `,\n    providers: [SELECTBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./selectbutton.css', '../button/button.css']\n})\nexport class SelectButton implements ControlValueAccessor, OnChanges {\n\n    @Input() tabindex: number = 0;\n\n    @Input() multiple: boolean;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() dataKey: string\n    \n    @Input() optionLabel: string;\n    \n    @Output() onOptionClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @ContentChild(TemplateRef) itemTemplate;\n    \n    value: any;\n        \n    _options: any[];\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    constructor(private cd: ChangeDetectorRef) {}\n    \n    @Input() get options(): any[] {\n        return this._options;\n    }\n\n    set options(val: any[]) {\n        //NoOp\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.options) {\n            this._options = this.optionLabel ? ObjectUtils.generateSelectItems(simpleChange.options.currentValue, this.optionLabel) : simpleChange.options.currentValue;\n        }\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    onItemClick(event, option: SelectItem, index: number) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n                \n        if (this.multiple) {\n            let itemIndex = this.findItemIndex(option);\n            if (itemIndex != -1)\n                this.value = this.value.filter((val,i) => i!=itemIndex);\n            else\n                this.value = [...this.value||[], option.value];\n        }\n        else {\n            this.value = option.value;\n        }\n        \n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        \n        this.onModelChange(this.value);\n        \n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    \n    onBlur(event) {\n        this.onModelTouched();\n    }\n    \n    isSelected(option: SelectItem) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return ObjectUtils.equals(option.value, this.value, this.dataKey);\n    }\n    \n    findItemIndex(option: SelectItem) {\n        let index = -1;\n        if (this.value) {\n            for(let i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [SelectButton],\n    declarations: [SelectButton]\n})\nexport class SelectButtonModule { }\n"]}