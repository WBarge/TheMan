(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('primeng/api'),require('@angular/common'),require('primeng/ripple'),exports, require('@angular/core'), require('@angular/common'), require('@angular/animations'), require('primeng/api'), require('primeng/ripple')) :
    typeof define === 'function' && define.amd ? define('primeng/messages', ['@angular/core','primeng/api','@angular/common','primeng/ripple','exports', '@angular/core', '@angular/common', '@angular/animations', 'primeng/api', 'primeng/ripple'], factory) :
    (global = global || self, factory(global.ng.core,global.primeng.api,global.ng.common,global.primeng.ripple,(global.primeng = global.primeng || {}, global.primeng.messages = {}), global.ng.core, global.ng.common, global.ng.animations, global.primeng.api, global.primeng.ripple));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,exports, core, common, animations, api, ripple) { 
function Messages_ng_container_1_div_1_ng_container_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 11);
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", msg_r4.summary, ɵngcc0.ɵɵsanitizeHtml);
} }
function Messages_ng_container_1_div_1_ng_container_3_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 12);
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", msg_r4.detail, ɵngcc0.ɵɵsanitizeHtml);
} }
function Messages_ng_container_1_div_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, Messages_ng_container_1_div_1_ng_container_3_span_1_Template, 1, 1, "span", 9);
    ɵngcc0.ɵɵtemplate(2, Messages_ng_container_1_div_1_ng_container_3_span_2_Template, 1, 1, "span", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", msg_r4.summary);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", msg_r4.detail);
} }
function Messages_ng_container_1_div_1_ng_template_4_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(msg_r4.summary);
} }
function Messages_ng_container_1_div_1_ng_template_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(msg_r4.detail);
} }
function Messages_ng_container_1_div_1_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, Messages_ng_container_1_div_1_ng_template_4_span_0_Template, 2, 1, "span", 13);
    ɵngcc0.ɵɵtemplate(1, Messages_ng_container_1_div_1_ng_template_4_span_1_Template, 2, 1, "span", 14);
} if (rf & 2) {
    var msg_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngIf", msg_r4.summary);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", msg_r4.detail);
} }
function Messages_ng_container_1_div_1_button_6_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function Messages_ng_container_1_div_1_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); var i_r5 = ɵngcc0.ɵɵnextContext().index; var ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.removeMessage(i_r5); });
    ɵngcc0.ɵɵelement(1, "i", 18);
    ɵngcc0.ɵɵelementEnd();
} }
var _c0 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
var _c1 = function (a1) { return { value: "visible", params: a1 }; };
var _c2 = function (a0, a1, a2, a3) { return { "pi-info-circle": a0, "pi-check": a1, "pi-exclamation-triangle": a2, "pi-times-circle": a3 }; };
function Messages_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelement(2, "span", 6);
    ɵngcc0.ɵɵtemplate(3, Messages_ng_container_1_div_1_ng_container_3_Template, 3, 2, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(4, Messages_ng_container_1_div_1_ng_template_4_Template, 2, 2, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(6, Messages_ng_container_1_div_1_button_6_Template, 2, 0, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var msg_r4 = ctx.$implicit;
    var _r7 = ɵngcc0.ɵɵreference(5);
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", "p-message p-message-" + msg_r4.severity)("@messageAnimation", ɵngcc0.ɵɵpureFunction1(9, _c1, ɵngcc0.ɵɵpureFunction2(6, _c0, ctx_r3.showTransitionOptions, ctx_r3.hideTransitionOptions)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(11, _c2, msg_r4.severity === "info", msg_r4.severity === "success", msg_r4.severity === "warn", msg_r4.severity === "error"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.escape)("ngIfElse", _r7);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.closable);
} }
function Messages_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, Messages_ng_container_1_div_1_Template, 7, 16, "div", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.value);
} }
function Messages_ng_template_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function Messages_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵtemplate(2, Messages_ng_template_2_ng_container_2_Template, 1, 0, "ng-container", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", "p-message p-message-" + ctx_r2.severity);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.contentTemplate);
} }
'use strict';

    var __read = (this && this.__read) || function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };
    var __spread = (this && this.__spread) || function () {
        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
        return ar;
    };
    var Messages = /** @class */ (function () {
        function Messages(messageService, el, cd) {
            this.messageService = messageService;
            this.el = el;
            this.cd = cd;
            this.closable = true;
            this.enableService = true;
            this.escape = true;
            this.showTransitionOptions = '300ms ease-out';
            this.hideTransitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';
            this.valueChange = new core.EventEmitter();
        }
        Messages.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.templates.forEach(function (item) {
                switch (item.getType()) {
                    case 'content':
                        _this.contentTemplate = item.template;
                        break;
                    default:
                        _this.contentTemplate = item.template;
                        break;
                }
            });
            if (this.messageService && this.enableService && !this.contentTemplate) {
                this.messageSubscription = this.messageService.messageObserver.subscribe(function (messages) {
                    if (messages) {
                        if (messages instanceof Array) {
                            var filteredMessages = messages.filter(function (m) { return _this.key === m.key; });
                            _this.value = _this.value ? __spread(_this.value, filteredMessages) : __spread(filteredMessages);
                        }
                        else if (_this.key === messages.key) {
                            _this.value = _this.value ? __spread(_this.value, [messages]) : [messages];
                        }
                        _this.cd.markForCheck();
                    }
                });
                this.clearSubscription = this.messageService.clearObserver.subscribe(function (key) {
                    if (key) {
                        if (_this.key === key) {
                            _this.value = null;
                        }
                    }
                    else {
                        _this.value = null;
                    }
                    _this.cd.markForCheck();
                });
            }
        };
        Messages.prototype.hasMessages = function () {
            var parentEl = this.el.nativeElement.parentElement;
            if (parentEl && parentEl.offsetParent) {
                return this.contentTemplate != null || this.value && this.value.length > 0;
            }
            return false;
        };
        Messages.prototype.clear = function () {
            this.value = [];
            this.valueChange.emit(this.value);
        };
        Messages.prototype.removeMessage = function (i) {
            this.value = this.value.filter(function (msg, index) { return index !== i; });
        };
        Object.defineProperty(Messages.prototype, "icon", {
            get: function () {
                var severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);
                if (this.hasMessages()) {
                    switch (severity) {
                        case 'success':
                            return 'pi-check';
                            break;
                        case 'info':
                            return 'pi-info-circle';
                            break;
                        case 'error':
                            return 'pi-times';
                            break;
                        case 'warn':
                            return 'pi-exclamation-triangle';
                            break;
                        default:
                            return 'pi-info-circle';
                            break;
                    }
                }
                return null;
            },
            enumerable: false,
            configurable: true
        });
        Messages.prototype.ngOnDestroy = function () {
            if (this.messageSubscription) {
                this.messageSubscription.unsubscribe();
            }
            if (this.clearSubscription) {
                this.clearSubscription.unsubscribe();
            }
        };
        Messages.ctorParameters = function () { return [
            { type: api.MessageService, decorators: [{ type: core.Optional }] },
            { type: core.ElementRef },
            { type: core.ChangeDetectorRef }
        ]; };
        Messages.ctorParameters = function () { return [
            { type: api.MessageService, decorators: [{ type: core.Optional }] },
            { type: core.ElementRef },
            { type: core.ChangeDetectorRef }
        ]; };
        Messages.propDecorators = {
            value: [{ type: core.Input }],
            closable: [{ type: core.Input }],
            style: [{ type: core.Input }],
            styleClass: [{ type: core.Input }],
            enableService: [{ type: core.Input }],
            key: [{ type: core.Input }],
            escape: [{ type: core.Input }],
            severity: [{ type: core.Input }],
            showTransitionOptions: [{ type: core.Input }],
            hideTransitionOptions: [{ type: core.Input }],
            templates: [{ type: core.ContentChildren, args: [api.PrimeTemplate,] }],
            valueChange: [{ type: core.Output }]
        };
Messages.ɵfac = function Messages_Factory(t) { return new (t || Messages)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MessageService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
Messages.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Messages, selectors: [["p-messages"]], contentQueries: function Messages_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, api.PrimeTemplate, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);
    } }, inputs: { closable: "closable", enableService: "enableService", escape: "escape", showTransitionOptions: "showTransitionOptions", hideTransitionOptions: "hideTransitionOptions", value: "value", style: "style", styleClass: "styleClass", key: "key", severity: "severity" }, outputs: { valueChange: "valueChange" }, decls: 4, vars: 5, consts: [["role", "alert", 1, "p-messages", "p-component", 3, "ngStyle"], [4, "ngIf", "ngIfElse"], ["staticMessage", ""], ["role", "alert", 3, "ngClass", 4, "ngFor", "ngForOf"], ["role", "alert", 3, "ngClass"], [1, "p-message-wrapper"], [1, "p-message-icon", "pi", 3, "ngClass"], ["escapeOut", ""], ["class", "p-message-close p-link", "type", "button", "pRipple", "", 3, "click", 4, "ngIf"], ["class", "p-message-summary", 3, "innerHTML", 4, "ngIf"], ["class", "p-message-detail", 3, "innerHTML", 4, "ngIf"], [1, "p-message-summary", 3, "innerHTML"], [1, "p-message-detail", 3, "innerHTML"], ["class", "p-message-summary", 4, "ngIf"], ["class", "p-message-detail", 4, "ngIf"], [1, "p-message-summary"], [1, "p-message-detail"], ["type", "button", "pRipple", "", 1, "p-message-close", "p-link", 3, "click"], [1, "p-message-close-icon", "pi", "pi-times"], [4, "ngTemplateOutlet"]], template: function Messages_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, Messages_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, Messages_ng_template_2_Template, 3, 2, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.contentTemplate)("ngIfElse", _r1);
    } }, directives: [ɵngcc2.NgStyle, ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc2.NgClass, ɵngcc3.Ripple, ɵngcc2.NgTemplateOutlet], styles: [".p-message-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-message-close{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}"], encapsulation: 2, data: { animation: [
            animations.trigger('messageAnimation', [
                animations.transition(':enter', [
                    animations.style({ opacity: 0, transform: 'translateY(-25%)' }),
                    animations.animate('{{showTransitionParams}}')
                ]),
                animations.transition(':leave', [
                    animations.animate('{{hideTransitionParams}}', animations.style({ height: 0, margin: 0, overflow: 'hidden', opacity: 0 }))
                ])
            ])
        ] }, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Messages, [{
        type: core.Component,
        args: [{
                selector: 'p-messages',
                template: "\n        <div class=\"p-messages p-component\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-container *ngIf=\"!contentTemplate; else staticMessage\">\n                <div *ngFor=\"let msg of value; let i=index\" [ngClass]=\"'p-message p-message-' + msg.severity\" role=\"alert\" \n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n                    <div class=\"p-message-wrapper\">\n                        <span class=\"p-message-icon pi\" [ngClass]=\"{'pi-info-circle': msg.severity === 'info', \n                            'pi-check': msg.severity === 'success',\n                            'pi-exclamation-triangle': msg.severity === 'warn',\n                            'pi-times-circle': msg.severity === 'error'}\"></span>\n                        <ng-container *ngIf=\"!escape; else escapeOut\">\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\" [innerHTML]=\"msg.summary\"></span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\" [innerHTML]=\"msg.detail\"></span>\n                        </ng-container>\n                        <ng-template #escapeOut>\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\">{{msg.summary}}</span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\">{{msg.detail}}</span>\n                        </ng-template>\n                        <button class=\"p-message-close p-link\" (click)=\"removeMessage(i)\" *ngIf=\"closable\" type=\"button\" pRipple>\n                            <i class=\"p-message-close-icon pi pi-times\"></i>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #staticMessage>\n                <div [ngClass]=\"'p-message p-message-' + severity\" role=\"alert\">\n                    <div class=\"p-message-wrapper\">\n                        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                    </div>\n                </div>\n            </ng-template>\n            </div>\n    ",
                animations: [
                    animations.trigger('messageAnimation', [
                        animations.transition(':enter', [
                            animations.style({ opacity: 0, transform: 'translateY(-25%)' }),
                            animations.animate('{{showTransitionParams}}')
                        ]),
                        animations.transition(':leave', [
                            animations.animate('{{hideTransitionParams}}', animations.style({ height: 0, margin: 0, overflow: 'hidden', opacity: 0 }))
                        ])
                    ])
                ],
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                encapsulation: core.ViewEncapsulation.None,
                styles: [".p-message-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-message-close{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}"]
            }]
    }], function () { return [{ type: ɵngcc1.MessageService, decorators: [{
                type: core.Optional
            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { closable: [{
            type: core.Input
        }], enableService: [{
            type: core.Input
        }], escape: [{
            type: core.Input
        }], showTransitionOptions: [{
            type: core.Input
        }], hideTransitionOptions: [{
            type: core.Input
        }], valueChange: [{
            type: core.Output
        }], value: [{
            type: core.Input
        }], style: [{
            type: core.Input
        }], styleClass: [{
            type: core.Input
        }], key: [{
            type: core.Input
        }], severity: [{
            type: core.Input
        }], templates: [{
            type: core.ContentChildren,
            args: [api.PrimeTemplate]
        }] }); })();
        return Messages;
    }());
    var MessagesModule = /** @class */ (function () {
        function MessagesModule() {
        }
MessagesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MessagesModule });
MessagesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MessagesModule_Factory(t) { return new (t || MessagesModule)(); }, imports: [[common.CommonModule, ripple.RippleModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MessagesModule, { declarations: [Messages], imports: [ɵngcc2.CommonModule, ɵngcc3.RippleModule], exports: [Messages] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MessagesModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, ripple.RippleModule],
                exports: [Messages],
                declarations: [Messages]
            }]
    }], function () { return []; }, null); })();
        return MessagesModule;
    }());

    exports.Messages = Messages;
    exports.MessagesModule = MessagesModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=primeng-messages.umd.js.map