{"version":3,"file":"primeng-focustrap.umd.js","sources":["ng:/primeng/focustrap/focustrap.ts"],"names":["DomHandler","ElementRef","Directive","Input","HostListener","NgModule","CommonModule"],"mappings":";;;;;;;QAWI,mBAAmB,EAAc;AAAI,YAAlB,OAAE,GAAF,EAAE,CAAY;AAAC,SAAG;AACzC,QAGI,6BAAS,GAFT,UAEU,CAAC;AACf,YAAQ,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;AAC9C,gBAAY,CAAC,CAAC,cAAc,EAAE,CAAC;AAC/B,gBAAY,IAAI,iBAAiB,GAAGA,cAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC3F,gBAAY,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;AACnE,oBAAgB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AAC7C,wBAAoB,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACjD,qBAAiB;AACjB,yBAAqB;AACrB,wBAAoB,IAAI,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACzF,wBACoB,IAAI,CAAC,CAAC,QAAQ,EAAE;AACpC,4BAAwB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;AACpE,gCAA4B,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACpF;AACI,gCAAwB,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxE,yBAAqB;AACrB,6BAAyB;AACzB,4BAAwB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,MAAM,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;AACjG,gCAA4B,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACzD;AACI,gCAAwB,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxE,yBAAqB;AACrB,qBAAiB;AACjB,iBAAa;AACb,aAAS;AACT,SAAK;AACJ;AAIc,oBAnCYC,eAAU;AAAG,aAJ3B;qDAHZC,rDAGa;SAHJ,SAAC,lBAOR,oBAXwBD,eAAU;MAKjC,NALoC;AAK5B,EAAE,cAAc,hBAL0B;EAMrD,FALS,yCAQLE,UAAK;AAAK,gCAIVC,iBAAY,SAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,cACtCA,iBAAY,SAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC;AAC7C;;;;;;;;;;;;;;;;;;oBAAU;AAAC,QA2Bf,gBAAC;AAED,KAxCA,IAsCC;AACD;AAGa,QAFb;AACiB,SAIe;2DAL/BC,aAAQ;MAAC,0BACN,OAAO,EAAE,CAACC,mBAAY,CAAC,0BACvB,OAAO,EAAE,CAAC,SAAS,CAAC,0BACpB,YAAY,EAAE,CAAC,SAAS,CAAC;QAC5B;;;;;;;;gDACY;AAAC,QAAiB,sBAAC;AAAE,KALlC;AAAK;AAAC;AAEN;AACqB;AAAC;AAEkC;AAAC;AAAM","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Directive({\n    selector: '[pFocusTrap]',\n})\nexport class FocusTrap {\n\n    @Input() pFocusTrapDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    onkeydown(e) {\n        if (this.pFocusTrapDisabled !== true) {\n            e.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (e.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [FocusTrap],\n    declarations: [FocusTrap]\n})\nexport class FocusTrapModule { }"]}